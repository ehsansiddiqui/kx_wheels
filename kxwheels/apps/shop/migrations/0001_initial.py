# -*- coding: utf-8 -*-
from __future__ import unicode_literals

from django.db import migrations, models
from django.conf import settings


class Migration(migrations.Migration):

    dependencies = [
        ('contenttypes', '0002_remove_content_type_name'),
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
        ('sites', '0001_initial'),
        ('l10n', '0001_initial'),
    ]

    operations = [
        migrations.CreateModel(
            name='Cart',
            fields=[
                ('id', models.IntegerField(serialize=False, verbose_name='id', primary_key=True)),
                ('customer_email', models.CharField(max_length=255, verbose_name='customer email', blank=True)),
                ('billing_first_name', models.CharField(max_length=255, verbose_name='billing first name', blank=True)),
                ('billing_last_name', models.CharField(max_length=255, verbose_name='billing last name', blank=True)),
                ('billing_address_1', models.CharField(max_length=255, verbose_name='billing address line 1', blank=True)),
                ('billing_address_2', models.CharField(max_length=255, verbose_name='billing address line 2', blank=True)),
                ('billing_city', models.CharField(max_length=255, verbose_name='billing city', blank=True)),
                ('billing_province', models.CharField(max_length=100, verbose_name='billing province', blank=True)),
                ('billing_postal_code', models.CharField(max_length=20, verbose_name='billing postal code', blank=True)),
                ('billing_country', models.CharField(max_length=100, verbose_name='billing country', blank=True)),
                ('billing_phone', models.CharField(max_length=20, verbose_name='billing phone', blank=True)),
                ('shipping_first_name', models.CharField(max_length=255, verbose_name='shipping first name', blank=True)),
                ('shipping_last_name', models.CharField(max_length=255, verbose_name='shipping last name', blank=True)),
                ('shipping_address_1', models.CharField(max_length=255, verbose_name='shipping address line 1', blank=True)),
                ('shipping_address_2', models.CharField(max_length=255, verbose_name='shipping address line 2', blank=True)),
                ('shipping_city', models.CharField(max_length=255, verbose_name='shipping city', blank=True)),
                ('shipping_province', models.CharField(max_length=100, verbose_name='shipping province', blank=True)),
                ('shipping_postal_code', models.CharField(max_length=20, verbose_name='shipping postal code', blank=True)),
                ('shipping_country', models.CharField(max_length=100, verbose_name='shipping country', blank=True)),
                ('shipping_phone', models.CharField(max_length=20, verbose_name='shipping phone', blank=True)),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='created at')),
                ('updated_at', models.DateTimeField(auto_now=True, verbose_name='updated at')),
                ('customer', models.ForeignKey(related_name='carts', verbose_name='customer', blank=True, to=settings.AUTH_USER_MODEL, null=True)),
            ],
            options={
                'verbose_name': 'cart',
                'verbose_name_plural': 'carts',
            },
        ),
        migrations.CreateModel(
            name='CartItem',
            fields=[
                ('id', models.AutoField(verbose_name='ID', serialize=False, auto_created=True, primary_key=True)),
                ('qty', models.IntegerField(default=1)),
                ('unit_price', models.DecimalField(verbose_name='sale price', max_digits=16, decimal_places=4)),
                ('object_id', models.CharField(max_length=255)),
                ('make', models.CharField(max_length=255, null=True, verbose_name='make', blank=True)),
                ('year', models.CharField(max_length=255, null=True, verbose_name='year', blank=True)),
                ('cart', models.ForeignKey(related_name='items', verbose_name='cart', to='shop.Cart')),
                ('content_type', models.ForeignKey(to='contenttypes.ContentType')),
            ],
            options={
                'verbose_name': 'cart item',
                'verbose_name_plural': 'cart items',
            },
        ),
        migrations.CreateModel(
            name='CartShipping',
            fields=[
                ('id', models.AutoField(verbose_name='ID', serialize=False, auto_created=True, primary_key=True)),
                ('name', models.CharField(max_length=255, null=True, verbose_name='shipping option', blank=True)),
                ('cost', models.DecimalField(null=True, verbose_name='shipping cost', max_digits=16, decimal_places=4, blank=True)),
                ('days', models.IntegerField(verbose_name='delivery days', blank=True)),
                ('is_selected', models.BooleanField(default=False, verbose_name='is selected?')),
                ('cart', models.ForeignKey(related_name='shipping_quotes', verbose_name='cart', to='shop.Cart')),
            ],
            options={
                'verbose_name': 'cart shipping',
                'verbose_name_plural': 'cart shippings',
            },
        ),
        migrations.CreateModel(
            name='Discount',
            fields=[
                ('code', models.CharField(max_length=255, serialize=False, verbose_name='discount code', primary_key=True)),
                ('kind', models.CharField(default=b'percentage', max_length=15, choices=[(b'amount', b'Discount amount'), (b'percentage', b'Discount percentage')])),
                ('value', models.DecimalField(verbose_name='value', max_digits=16, decimal_places=4)),
                ('short_desc', models.CharField(max_length=100, verbose_name='short description')),
                ('long_desc', models.TextField(null=True, verbose_name='long description', blank=True)),
                ('valid_from', models.DateTimeField(null=True, verbose_name='valid from', blank=True)),
                ('valid_till', models.DateTimeField(null=True, verbose_name='valid till', blank=True)),
                ('is_active', models.BooleanField(default=True, verbose_name='is active?')),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='created at')),
                ('updated_at', models.DateTimeField(auto_now=True, verbose_name='updated at')),
            ],
        ),
        migrations.CreateModel(
            name='ItemOption',
            fields=[
                ('id', models.AutoField(verbose_name='ID', serialize=False, auto_created=True, primary_key=True)),
                ('name', models.CharField(max_length=255, verbose_name='option name')),
                ('value', models.CharField(max_length=255, verbose_name='option value')),
                ('price_adjustment', models.DecimalField(default=b'0.00', verbose_name='price adjustment', max_digits=16, decimal_places=4)),
            ],
            options={
                'verbose_name': 'item option',
                'verbose_name_plural': 'item options',
            },
        ),
        migrations.CreateModel(
            name='Option',
            fields=[
                ('id', models.AutoField(verbose_name='ID', serialize=False, auto_created=True, primary_key=True)),
                ('name', models.CharField(max_length=255)),
                ('type', models.IntegerField(default=1, help_text='Product options will be ignored when using Text Input', verbose_name='option type', choices=[(0, b'Text Input'), (1, b'Select Input')])),
                ('ordering', models.IntegerField(default=0, verbose_name='sort order')),
            ],
        ),
        migrations.CreateModel(
            name='Order',
            fields=[
                ('id', models.IntegerField(serialize=False, verbose_name='id', primary_key=True)),
                ('customer_email', models.CharField(max_length=255, verbose_name='customer email', blank=True)),
                ('billing_first_name', models.CharField(max_length=255, verbose_name='billing first name', blank=True)),
                ('billing_last_name', models.CharField(max_length=255, verbose_name='billing last name', blank=True)),
                ('billing_address_1', models.CharField(max_length=255, verbose_name='billing address line 1', blank=True)),
                ('billing_address_2', models.CharField(max_length=255, verbose_name='billing address line 2', blank=True)),
                ('billing_city', models.CharField(max_length=255, verbose_name='billing city', blank=True)),
                ('billing_province', models.CharField(max_length=100, verbose_name='billing province', blank=True)),
                ('billing_postal_code', models.CharField(max_length=20, verbose_name='billing postal code', blank=True)),
                ('billing_country', models.CharField(max_length=100, verbose_name='billing country', blank=True)),
                ('billing_phone', models.CharField(max_length=20, verbose_name='billing phone', blank=True)),
                ('shipping_first_name', models.CharField(max_length=255, verbose_name='shipping first name', blank=True)),
                ('shipping_last_name', models.CharField(max_length=255, verbose_name='shipping last name', blank=True)),
                ('shipping_address_1', models.CharField(max_length=255, verbose_name='shipping address line 1', blank=True)),
                ('shipping_address_2', models.CharField(max_length=255, verbose_name='shipping address line 2', blank=True)),
                ('shipping_city', models.CharField(max_length=255, verbose_name='shipping city', blank=True)),
                ('shipping_province', models.CharField(max_length=100, verbose_name='shipping province', blank=True)),
                ('shipping_postal_code', models.CharField(max_length=20, verbose_name='shipping postal code', blank=True)),
                ('shipping_country', models.CharField(max_length=100, verbose_name='shipping country', blank=True)),
                ('shipping_phone', models.CharField(max_length=20, verbose_name='shipping phone', blank=True)),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='created at')),
                ('updated_at', models.DateTimeField(auto_now=True, verbose_name='updated at')),
                ('discount', models.DecimalField(default=b'0.00', verbose_name='discount', max_digits=16, decimal_places=4)),
                ('shipping_option', models.CharField(max_length=255, null=True, verbose_name='shipping option', blank=True)),
                ('shipping_cost', models.DecimalField(default=b'0.00', verbose_name='shipping cost', max_digits=16, decimal_places=4)),
                ('shipping_delivery', models.DateField(null=True, verbose_name='shipping delivery', blank=True)),
                ('selected_vehicle', models.CharField(max_length=255, null=True, verbose_name='selected vehicle', blank=True)),
                ('make', models.CharField(max_length=255, null=True, verbose_name='make', blank=True)),
                ('year', models.CharField(max_length=255, null=True, verbose_name='year', blank=True)),
                ('customer_notes', models.TextField(null=True, blank=True)),
                ('po', models.CharField(max_length=100, null=True, verbose_name='purchase order', blank=True)),
                ('status', models.IntegerField(default=0, blank=True, choices=[(0, b'Preview'), (1, b'Received'), (2, b'In Process'), (3, b'Completed'), (4, b'Declined')])),
                ('customer', models.ForeignKey(related_name='orders', verbose_name='customer', to=settings.AUTH_USER_MODEL)),
                ('dealer', models.ForeignKey(related_name='dealers', verbose_name='dealer', blank=True, to=settings.AUTH_USER_MODEL, null=True)),
            ],
            options={
                'verbose_name': 'order',
                'verbose_name_plural': 'orders',
            },
        ),
        migrations.CreateModel(
            name='OrderItem',
            fields=[
                ('id', models.AutoField(verbose_name='ID', serialize=False, auto_created=True, primary_key=True)),
                ('qty', models.IntegerField(default=1)),
                ('unit_price', models.DecimalField(verbose_name='sale price', max_digits=16, decimal_places=4)),
                ('object_id', models.CharField(max_length=255)),
                ('content_type', models.ForeignKey(to='contenttypes.ContentType')),
                ('options', models.ManyToManyField(to='shop.ItemOption', verbose_name='options', blank=True)),
                ('order', models.ForeignKey(related_name='items', verbose_name='order', to='shop.Order')),
            ],
            options={
                'verbose_name': 'order item',
                'verbose_name_plural': 'order items',
            },
        ),
        migrations.CreateModel(
            name='OrderLoginProduct',
            fields=[
                ('id', models.AutoField(verbose_name='ID', serialize=False, auto_created=True, primary_key=True)),
                ('product', models.CharField(max_length=255, null=True, verbose_name='product', blank=True)),
                ('make', models.CharField(max_length=255, null=True, verbose_name='make', blank=True)),
                ('year', models.CharField(max_length=255, null=True, verbose_name='year', blank=True)),
                ('model', models.CharField(max_length=255, null=True, verbose_name='model', blank=True)),
                ('order', models.ForeignKey(related_name='order_login', verbose_name='order', to='shop.Order')),
            ],
            options={
                'verbose_name': 'shoplogin',
                'verbose_name_plural': 'shopslogin',
            },
        ),
        migrations.CreateModel(
            name='OrderLogout',
            fields=[
                ('id', models.AutoField(verbose_name='ID', serialize=False, auto_created=True, primary_key=True)),
                ('status', models.CharField(max_length=255, null=True, verbose_name='status', blank=True)),
                ('price', models.CharField(max_length=255, null=True, verbose_name='price', blank=True)),
                ('name', models.CharField(max_length=255, null=True, verbose_name='name', blank=True)),
                ('address', models.CharField(max_length=255, null=True, verbose_name='address', blank=True)),
                ('cart_id', models.CharField(max_length=255, null=True, verbose_name='cart_id', blank=True)),
                ('created_at', models.CharField(max_length=255, null=True, verbose_name='created_at', blank=True)),
                ('ip_address', models.CharField(max_length=255, null=True, verbose_name='ip_address', blank=True)),
                ('email', models.CharField(max_length=255, null=True, verbose_name='email', blank=True)),
            ],
            options={
                'verbose_name': 'shoplogout',
                'verbose_name_plural': 'shopslogout',
            },
        ),
        migrations.CreateModel(
            name='OrderLogoutProductt',
            fields=[
                ('id', models.AutoField(verbose_name='ID', serialize=False, auto_created=True, primary_key=True)),
                ('product', models.CharField(max_length=255, null=True, verbose_name='product', blank=True)),
                ('make', models.CharField(max_length=255, null=True, verbose_name='make', blank=True)),
                ('year', models.CharField(max_length=255, null=True, verbose_name='year', blank=True)),
                ('model', models.CharField(max_length=255, null=True, verbose_name='model', blank=True)),
                ('orderlogout', models.ForeignKey(related_name='order_product', verbose_name='shoplogout', to='shop.OrderLogout')),
            ],
            options={
                'verbose_name': 'shoplogout',
                'verbose_name_plural': 'shopslogout',
            },
        ),
        migrations.CreateModel(
            name='OrderNote',
            fields=[
                ('id', models.AutoField(verbose_name='ID', serialize=False, auto_created=True, primary_key=True)),
                ('note', models.TextField(null=True, verbose_name='note', blank=True)),
                ('notify_customer', models.BooleanField(default=False, verbose_name='notify customer?')),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='created at')),
                ('updated_at', models.DateTimeField(auto_now=True, verbose_name='updated at')),
                ('created_by', models.ForeignKey(related_name='owned_order_notes', verbose_name='created by', to=settings.AUTH_USER_MODEL)),
                ('order', models.ForeignKey(related_name='notes', verbose_name='order', to='shop.Order')),
            ],
        ),
        migrations.CreateModel(
            name='Payment',
            fields=[
                ('trans_id', models.CharField(max_length=45, serialize=False, verbose_name='Transaction ID', primary_key=True)),
                ('trans_type', models.CharField(max_length=45, verbose_name='Transaction Type', choices=[(b'purchase', b'Purchase'), (b'preauth', b'PreAuth'), (b'capture', b'Capture'), (b'void', b'Void'), (b'refund', b'Refund')])),
                ('trans_datetime', models.DateTimeField(verbose_name='Transaction Datetime')),
                ('amount', models.DecimalField(default=b'0.00', verbose_name='Amount', max_digits=18, decimal_places=4)),
                ('method', models.CharField(max_length=25, verbose_name='Method')),
                ('gateway', models.CharField(max_length=25, verbose_name='Gateway')),
                ('auth_code', models.CharField(max_length=255, verbose_name='Auth Code')),
                ('iso_code', models.CharField(max_length=255, verbose_name='ISO Code')),
                ('response_code', models.CharField(max_length=255, verbose_name='Response Code')),
                ('reason_code', models.CharField(max_length=255, verbose_name='Reason Code')),
                ('message', models.CharField(max_length=255, verbose_name='Message')),
                ('is_success', models.BooleanField(default=False, verbose_name='Approved?')),
                ('raw', models.TextField(verbose_name='Raw')),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='created at')),
                ('updated_at', models.DateTimeField(auto_now=True, verbose_name='updated at')),
                ('order', models.ForeignKey(related_name='payments', verbose_name='Order', to='shop.Order')),
            ],
            options={
                'verbose_name': 'payment',
                'verbose_name_plural': 'payments',
            },
        ),
        migrations.CreateModel(
            name='ProductOption',
            fields=[
                ('id', models.AutoField(verbose_name='ID', serialize=False, auto_created=True, primary_key=True)),
                ('value', models.CharField(max_length=100, verbose_name='value')),
                ('price_adjustment', models.DecimalField(default=b'0.00', help_text='enter either negetive or postive value', verbose_name='price adjustment', max_digits=16, decimal_places=4)),
                ('ordering', models.IntegerField(default=0, verbose_name='sort order')),
                ('option', models.ForeignKey(related_name='product_options', to='shop.Option')),
            ],
        ),
        migrations.CreateModel(
            name='Setting',
            fields=[
                ('site', models.OneToOneField(related_name='shop_setting', primary_key=True, serialize=False, to='sites.Site', blank=True, verbose_name='site')),
                ('store_name', models.CharField(unique=True, max_length=100, verbose_name='store name')),
                ('store_description', models.TextField(null=True, verbose_name='description', blank=True)),
                ('store_email', models.EmailField(max_length=254, verbose_name='store email')),
                ('store_orders_email', models.EmailField(max_length=254, verbose_name='orders email')),
                ('street1', models.CharField(max_length=255, verbose_name='st. address 1')),
                ('street2', models.CharField(max_length=50, null=True, verbose_name='st. address 2', blank=True)),
                ('city', models.CharField(max_length=255, verbose_name='city')),
                ('province', models.CharField(max_length=255, verbose_name='province')),
                ('postal_code', models.CharField(max_length=20, verbose_name='postal code')),
                ('country', models.CharField(max_length=255, verbose_name='country')),
                ('phone', models.CharField(max_length=30, verbose_name='phone number')),
                ('fax', models.CharField(max_length=30, verbose_name='fax number')),
            ],
            options={
                'verbose_name': 'setting',
                'verbose_name_plural': 'settings',
            },
        ),
        migrations.CreateModel(
            name='TaxClass',
            fields=[
                ('id', models.AutoField(verbose_name='ID', serialize=False, auto_created=True, primary_key=True)),
                ('name', models.CharField(max_length=100, verbose_name='name')),
                ('number', models.CharField(max_length=100, null=True, verbose_name='registration number', blank=True)),
                ('description', models.TextField(verbose_name='description')),
                ('default_rate', models.DecimalField(help_text='Default rate will be used if tax rate         is not defined', verbose_name='default rate', max_digits=4, decimal_places=2)),
                ('ordering', models.IntegerField(default=0, help_text='order         in which this tax is applied', verbose_name='order')),
                ('site', models.ForeignKey(related_name='taxclasses', verbose_name='site', to='sites.Site')),
            ],
            options={
                'verbose_name': 'tax class',
                'verbose_name_plural': 'tax classes',
            },
        ),
        migrations.CreateModel(
            name='TaxRate',
            fields=[
                ('id', models.AutoField(verbose_name='ID', serialize=False, auto_created=True, primary_key=True)),
                ('kind', models.CharField(default=b'percentage', max_length=15, choices=[(b'amount', b'Amount'), (b'percentage', b'Percentage')])),
                ('value', models.DecimalField(verbose_name='value', max_digits=16, decimal_places=4)),
                ('is_stacked', models.BooleanField(default=0, verbose_name='is stacked?')),
                ('is_per_item', models.BooleanField(default=0, verbose_name='is per item?')),
                ('tax_class', models.ForeignKey(related_name='rates', to='shop.TaxClass')),
                ('tax_zone', models.ForeignKey(related_name='tax_rates', verbose_name=b'tax zone', blank=True, to='l10n.AdminArea', null=True)),
            ],
            options={
                'verbose_name': 'tax rate',
                'verbose_name_plural': 'tax rates',
            },
        ),
        migrations.AddField(
            model_name='order',
            name='site',
            field=models.ForeignKey(related_name='orders', verbose_name='site', to='sites.Site'),
        ),
        migrations.AddField(
            model_name='cartitem',
            name='options',
            field=models.ManyToManyField(to='shop.ItemOption', verbose_name='options', blank=True),
        ),
        migrations.AddField(
            model_name='cart',
            name='discount',
            field=models.ForeignKey(verbose_name='discount', blank=True, to='shop.Discount', null=True),
        ),
        migrations.AddField(
            model_name='cart',
            name='site',
            field=models.ForeignKey(related_name='carts', verbose_name='site', to='sites.Site'),
        ),
        migrations.AlterUniqueTogether(
            name='taxrate',
            unique_together=set([('tax_class', 'tax_zone')]),
        ),
    ]

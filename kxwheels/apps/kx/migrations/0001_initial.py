# -*- coding: utf-8 -*-
from __future__ import unicode_literals

from django.db import migrations, models
import sorl.thumbnail.fields


class Migration(migrations.Migration):

    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
            name='Accessories',
            fields=[
                ('id', models.AutoField(verbose_name='ID', serialize=False, auto_created=True, primary_key=True)),
                ('meta_title', models.CharField(max_length=255, null=True, verbose_name='meta title', blank=True)),
                ('meta_keywords', models.CharField(max_length=255, null=True, verbose_name='meta keywords', blank=True)),
                ('meta_description', models.CharField(max_length=500, null=True, verbose_name='meta description', blank=True)),
                ('ordering', models.IntegerField(null=True, verbose_name='sort order', blank=True)),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='created at', null=True)),
                ('updated_at', models.DateTimeField(auto_now=True, verbose_name='updated at', null=True)),
                ('is_active', models.BooleanField(default=1, verbose_name='is active?')),
                ('name', models.CharField(max_length=200, verbose_name='name')),
                ('slug', models.SlugField(max_length=255, verbose_name='slug', blank=True)),
                ('description', models.TextField(verbose_name='description', blank=True)),
                ('is_configurator', models.BooleanField(default=False, verbose_name='is configurator available')),
                ('picture', sorl.thumbnail.fields.ImageField(upload_to=b'media/accessories_logos', null=True, verbose_name='picture', blank=True)),
                ('warranty', models.TextField(null=True, verbose_name='warranty', blank=True)),
            ],
            options={
                'ordering': ('name',),
                'verbose_name': 'accessories',
                'verbose_name_plural': 'accessories',
            },
        ),
        migrations.CreateModel(
            name='AccessoriesCoupon',
            fields=[
                ('id', models.AutoField(verbose_name='ID', serialize=False, auto_created=True, primary_key=True)),
                ('picture', sorl.thumbnail.fields.ImageField(upload_to=b'media/accessories_coupons', verbose_name='picture')),
                ('detail', models.TextField(null=True, verbose_name='coupon details', blank=True)),
                ('is_active', models.BooleanField()),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='created at')),
                ('updated_at', models.DateTimeField(auto_now=True, verbose_name='updated at')),
            ],
        ),
        migrations.CreateModel(
            name='AccessoriesCustomerMedia',
            fields=[
                ('id', models.AutoField(verbose_name='ID', serialize=False, auto_created=True, primary_key=True)),
                ('title', models.CharField(max_length=100, verbose_name='title')),
                ('make', models.CharField(max_length=255, verbose_name='make')),
                ('year', models.CharField(max_length=255, verbose_name='year')),
                ('model', models.CharField(max_length=255, verbose_name='model')),
                ('picture', sorl.thumbnail.fields.ImageField(help_text=b'Max size is 250 KiB', upload_to=b'media/customer', null=True, verbose_name='picture', blank=True)),
                ('video', models.URLField(help_text=b'YouTube Video URL', max_length=255, null=True, verbose_name='video', blank=True)),
                ('comment', models.TextField(max_length=500, null=True, verbose_name='comments', blank=True)),
                ('is_active', models.BooleanField(default=False)),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='created at')),
                ('updated_at', models.DateTimeField(auto_now=True, verbose_name='updated at')),
            ],
        ),
        migrations.CreateModel(
            name='AccessoriesDetail',
            fields=[
                ('id', models.AutoField(verbose_name='ID', serialize=False, auto_created=True, primary_key=True)),
                ('sku', models.CharField(max_length=255, unique=True, null=True, verbose_name='SKU', blank=True)),
                ('name', models.CharField(max_length=255, verbose_name='name')),
                ('slug', models.SlugField(help_text='Leave blank to auto-generate', max_length=255, verbose_name='slug', blank=True)),
                ('short_desc', models.CharField(max_length=255, null=True, verbose_name='short description', blank=True)),
                ('long_desc', models.TextField(null=True, verbose_name='long description', blank=True)),
                ('quantity', models.IntegerField(default=1, help_text='in stock', verbose_name='quantity')),
                ('cost', models.DecimalField(null=True, verbose_name='cost', max_digits=16, decimal_places=4, blank=True)),
                ('price', models.DecimalField(verbose_name='price', max_digits=16, decimal_places=4)),
                ('special_price', models.DecimalField(null=True, verbose_name='special price', max_digits=16, decimal_places=4, blank=True)),
                ('spvf', models.DateTimeField(null=True, verbose_name='special price valid from', blank=True)),
                ('spvt', models.DateTimeField(null=True, verbose_name='special price valid till', blank=True)),
                ('meta_title', models.CharField(max_length=255, null=True, verbose_name='meta title', blank=True)),
                ('meta_keywords', models.CharField(max_length=255, null=True, verbose_name='meta keywords', blank=True)),
                ('meta_description', models.CharField(max_length=500, null=True, verbose_name='meta description', blank=True)),
                ('is_active', models.BooleanField(default=True, verbose_name='is active?')),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='created at')),
                ('updated_at', models.DateTimeField(auto_now=True, verbose_name='updated at')),
                ('weight', models.DecimalField(null=True, verbose_name='weight', max_digits=8, decimal_places=2, blank=True)),
                ('weight_unit', models.CharField(default=b'kg', max_length=b'50', verbose_name='weight unit')),
                ('length', models.DecimalField(null=True, verbose_name='length', max_digits=8, decimal_places=2, blank=True)),
                ('length_unit', models.CharField(default=b'm', max_length=b'50', verbose_name='length unit')),
                ('width', models.DecimalField(null=True, verbose_name='width', max_digits=8, decimal_places=2, blank=True)),
                ('width_unit', models.CharField(default=b'm', max_length=b'50', verbose_name='width unit')),
                ('height', models.DecimalField(null=True, verbose_name='height', max_digits=8, decimal_places=2, blank=True)),
                ('height_unit', models.CharField(default=b'm', max_length=b'50', verbose_name='height unit')),
                ('accessoriewidth', models.DecimalField(decimal_places=1, max_digits=4, blank=True, null=True, verbose_name='wheel width', db_index=True)),
                ('diameter', models.DecimalField(decimal_places=1, max_digits=4, blank=True, null=True, verbose_name='diameter', db_index=True)),
                ('offset', models.IntegerField(db_index=True, null=True, verbose_name='offset', blank=True)),
                ('finish', models.CharField(db_index=True, max_length=50, null=True, verbose_name='finish', blank=True)),
            ],
            options={
                'ordering': ('diameter',),
                'verbose_name': 'accessorie detail',
                'verbose_name_plural': 'accessorie details',
            },
        ),
        migrations.CreateModel(
            name='AccessoriesDiscount',
            fields=[
                ('id', models.AutoField(verbose_name='ID', serialize=False, auto_created=True, primary_key=True)),
                ('discount', models.IntegerField(default=13, verbose_name='discount')),
                ('is_visible', models.BooleanField(default=True, verbose_name='Is this brand visible to dealer?')),
            ],
            options={
                'verbose_name': 'wheel accesories discount',
                'verbose_name_plural': 'wheel accesories discounts',
            },
        ),
        migrations.CreateModel(
            name='AccessoriesList',
            fields=[
                ('id', models.AutoField(verbose_name='ID', serialize=False, auto_created=True, primary_key=True)),
                ('meta_title', models.CharField(max_length=255, null=True, verbose_name='meta title', blank=True)),
                ('meta_keywords', models.CharField(max_length=255, null=True, verbose_name='meta keywords', blank=True)),
                ('meta_description', models.CharField(max_length=500, null=True, verbose_name='meta description', blank=True)),
                ('ordering', models.IntegerField(null=True, verbose_name='sort order', blank=True)),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='created at', null=True)),
                ('updated_at', models.DateTimeField(auto_now=True, verbose_name='updated at', null=True)),
                ('is_active', models.BooleanField(default=1, verbose_name='is active?')),
                ('name', models.CharField(max_length=200, verbose_name='name')),
                ('slug', models.SlugField(max_length=255, verbose_name='slug', blank=True)),
                ('description', models.TextField(null=True, verbose_name='description', blank=True)),
            ],
            options={
                'ordering': ['name'],
                'verbose_name': 'accessories list',
                'verbose_name_plural': 'accessories list',
            },
        ),
        migrations.CreateModel(
            name='AccessoriesPicture',
            fields=[
                ('id', models.AutoField(verbose_name='ID', serialize=False, auto_created=True, primary_key=True)),
                ('picture', sorl.thumbnail.fields.ImageField(upload_to=b'media/accessories', null=True, verbose_name='picture', blank=True)),
                ('caption', models.CharField(max_length=255, null=True, verbose_name='optional caption', blank=True)),
            ],
            options={
                'verbose_name': 'accessorie picture',
                'verbose_name_plural': 'accessorie pictures',
            },
        ),
        migrations.CreateModel(
            name='AccessoriesPictureThumbnail',
            fields=[
                ('id', models.AutoField(verbose_name='ID', serialize=False, auto_created=True, primary_key=True)),
                ('size', models.CharField(max_length=50)),
                ('path', models.CharField(max_length=1000)),
            ],
        ),
        migrations.CreateModel(
            name='AccessoriesReview',
            fields=[
                ('id', models.AutoField(verbose_name='ID', serialize=False, auto_created=True, primary_key=True)),
                ('title', models.CharField(help_text='e.g, A great product.', max_length=255, verbose_name='title of your review')),
                ('name', models.CharField(max_length=255, verbose_name='your name', blank=True)),
                ('rating', models.PositiveIntegerField(verbose_name='rating', choices=[(1, b'Sucks'), (2, b'Meh'), (3, b'OK-ish blah blah blah'), (4, b'Good'), (5, b'Dope')])),
                ('buy_again', models.IntegerField(verbose_name='would buy again?', choices=[(0, b'Definitely'), (1, b'May Be'), (2, b'Not Likely'), (3, b'Not a Chance')])),
                ('recommend', models.IntegerField(verbose_name='would recommend?', choices=[(0, b'Definitely'), (1, b'May Be'), (2, b'Not Likely'), (3, b'Not a Chance')])),
                ('pros', models.TextField(help_text='What do you think is good about this produt.', verbose_name='pros')),
                ('cons', models.TextField(help_text='What do you think is not-so-good about this product.', verbose_name='cons')),
                ('bottom_line', models.TextField(help_text='All things considered, how would you conclude.', null=True, verbose_name='bottom line', blank=True)),
                ('ip', models.GenericIPAddressField(null=True, verbose_name='IP address', blank=True)),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='created at')),
                ('is_approved', models.BooleanField(default=False)),
                ('upvotes', models.IntegerField(default=0, null=True, verbose_name='up votes', blank=True)),
                ('downvotes', models.IntegerField(default=0, null=True, verbose_name='down votes', blank=True)),
                ('make', models.CharField(max_length=255, verbose_name='make')),
                ('year', models.CharField(max_length=255, verbose_name='year')),
                ('model', models.CharField(max_length=255, verbose_name='model')),
                ('mileage', models.IntegerField(help_text='Distance travelled on wheels', null=True, verbose_name='mileage', blank=True)),
            ],
            options={
                'ordering': ('-created_at',),
            },
        ),
        migrations.CreateModel(
            name='DealerAccessoriesDiscount',
            fields=[
                ('id', models.AutoField(verbose_name='ID', serialize=False, auto_created=True, primary_key=True)),
                ('discount', models.IntegerField(default=25, verbose_name='discount')),
            ],
            options={
                'verbose_name': 'dealer accessories discount',
                'verbose_name_plural': 'dealer accessories discounts',
            },
        ),
        migrations.CreateModel(
            name='DealerTireManufacturerDiscount',
            fields=[
                ('id', models.AutoField(verbose_name='ID', serialize=False, auto_created=True, primary_key=True)),
                ('discount', models.IntegerField(default=13, verbose_name='discount')),
            ],
            options={
                'verbose_name': 'dealer_tire manufacturer discount',
                'verbose_name_plural': 'dealer_tire manufacturer discounts',
            },
        ),
        migrations.CreateModel(
            name='DealerWheelManufacturerDiscount',
            fields=[
                ('id', models.AutoField(verbose_name='ID', serialize=False, auto_created=True, primary_key=True)),
                ('discount', models.IntegerField(default=25, verbose_name='discount')),
            ],
            options={
                'verbose_name': 'dealer wheel manufacturer discount',
                'verbose_name_plural': 'dealer wheel manufacturer discounts',
            },
        ),
        migrations.CreateModel(
            name='Task',
            fields=[
                ('task', models.CharField(max_length=255, serialize=False, primary_key=True)),
                ('session', models.CharField(max_length=255)),
                ('is_completed', models.BooleanField()),
                ('created_at', models.DateTimeField(auto_now_add=True)),
            ],
        ),
        migrations.CreateModel(
            name='Tire',
            fields=[
                ('id', models.AutoField(verbose_name='ID', serialize=False, auto_created=True, primary_key=True)),
                ('meta_title', models.CharField(max_length=255, null=True, verbose_name='meta title', blank=True)),
                ('meta_keywords', models.CharField(max_length=255, null=True, verbose_name='meta keywords', blank=True)),
                ('meta_description', models.CharField(max_length=500, null=True, verbose_name='meta description', blank=True)),
                ('ordering', models.IntegerField(null=True, verbose_name='sort order', blank=True)),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='created at', null=True)),
                ('updated_at', models.DateTimeField(auto_now=True, verbose_name='updated at', null=True)),
                ('is_active', models.BooleanField(default=1, verbose_name='is active?')),
                ('name', models.CharField(max_length=200, verbose_name='name')),
                ('slug', models.SlugField(unique=True, max_length=255, verbose_name='slug', blank=True)),
                ('description', models.TextField(verbose_name='description', blank=True)),
                ('dry_rating', models.DecimalField(null=True, verbose_name='dry rating', max_digits=3, decimal_places=2, blank=True)),
                ('wet_rating', models.DecimalField(null=True, verbose_name='wet rating', max_digits=3, decimal_places=2, blank=True)),
                ('snow_rating', models.DecimalField(null=True, verbose_name='snow rating', max_digits=3, decimal_places=2, blank=True)),
                ('handling_rating', models.DecimalField(null=True, verbose_name='handling rating', max_digits=3, decimal_places=2, blank=True)),
                ('comfort_rating', models.DecimalField(null=True, verbose_name='comfort rating', max_digits=3, decimal_places=2, blank=True)),
                ('noise_rating', models.DecimalField(null=True, verbose_name='noise rating', max_digits=3, decimal_places=2, blank=True)),
                ('treadwear_rating', models.DecimalField(null=True, verbose_name='treadwear rating', max_digits=3, decimal_places=2, blank=True)),
            ],
            options={
                'ordering': ['name'],
                'verbose_name': 'tire',
                'verbose_name_plural': 'tires',
            },
        ),
        migrations.CreateModel(
            name='TireBrandImagesThumbnail',
            fields=[
                ('id', models.AutoField(verbose_name='ID', serialize=False, auto_created=True, primary_key=True)),
                ('brand_name', models.CharField(max_length=155)),
                ('size', models.CharField(max_length=50)),
                ('path', models.CharField(max_length=1000)),
            ],
        ),
        migrations.CreateModel(
            name='TireCategory',
            fields=[
                ('id', models.AutoField(verbose_name='ID', serialize=False, auto_created=True, primary_key=True)),
                ('meta_title', models.CharField(max_length=255, null=True, verbose_name='meta title', blank=True)),
                ('meta_keywords', models.CharField(max_length=255, null=True, verbose_name='meta keywords', blank=True)),
                ('meta_description', models.CharField(max_length=500, null=True, verbose_name='meta description', blank=True)),
                ('ordering', models.IntegerField(null=True, verbose_name='sort order', blank=True)),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='created at', null=True)),
                ('updated_at', models.DateTimeField(auto_now=True, verbose_name='updated at', null=True)),
                ('is_active', models.BooleanField(default=1, verbose_name='is active?')),
                ('name', models.CharField(max_length=100, verbose_name='name')),
                ('slug', models.SlugField(unique=True, max_length=100, verbose_name='slug')),
                ('picture', sorl.thumbnail.fields.ImageField(upload_to=b'media/categories', null=True, verbose_name='picture', blank=True)),
            ],
            options={
                'verbose_name': 'category',
                'verbose_name_plural': 'categories',
            },
        ),
        migrations.CreateModel(
            name='TireCoupon',
            fields=[
                ('id', models.AutoField(verbose_name='ID', serialize=False, auto_created=True, primary_key=True)),
                ('picture', sorl.thumbnail.fields.ImageField(upload_to=b'media/coupons', verbose_name='picture')),
                ('detail', models.TextField(null=True, verbose_name='coupon details', blank=True)),
                ('is_active', models.BooleanField()),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='created at')),
                ('updated_at', models.DateTimeField(auto_now=True, verbose_name='updated at')),
            ],
        ),
        migrations.CreateModel(
            name='TireCustomerMedia',
            fields=[
                ('id', models.AutoField(verbose_name='ID', serialize=False, auto_created=True, primary_key=True)),
                ('title', models.CharField(max_length=100, verbose_name='title')),
                ('make', models.CharField(max_length=255, verbose_name='make')),
                ('year', models.CharField(max_length=255, verbose_name='year')),
                ('model', models.CharField(max_length=255, verbose_name='model')),
                ('picture', sorl.thumbnail.fields.ImageField(help_text=b'Max size is 250 KiB', upload_to=b'media/customer', null=True, verbose_name='picture', blank=True)),
                ('video', models.URLField(help_text=b'YouTube Video URL', max_length=255, null=True, verbose_name='video', blank=True)),
                ('comment', models.TextField(max_length=500, null=True, verbose_name='comments', blank=True)),
                ('is_active', models.BooleanField()),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='created at')),
                ('updated_at', models.DateTimeField(auto_now=True, verbose_name='updated at')),
            ],
        ),
        migrations.CreateModel(
            name='TireManufacturer',
            fields=[
                ('id', models.AutoField(verbose_name='ID', serialize=False, auto_created=True, primary_key=True)),
                ('meta_title', models.CharField(max_length=255, null=True, verbose_name='meta title', blank=True)),
                ('meta_keywords', models.CharField(max_length=255, null=True, verbose_name='meta keywords', blank=True)),
                ('meta_description', models.CharField(max_length=500, null=True, verbose_name='meta description', blank=True)),
                ('ordering', models.IntegerField(null=True, verbose_name='sort order', blank=True)),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='created at', null=True)),
                ('updated_at', models.DateTimeField(auto_now=True, verbose_name='updated at', null=True)),
                ('is_active', models.BooleanField(default=1, verbose_name='is active?')),
                ('name', models.CharField(max_length=200, verbose_name='name')),
                ('description', models.TextField(verbose_name='description', blank=True)),
                ('slug', models.SlugField(unique=True, max_length=255, verbose_name='slug', blank=True)),
                ('picture', sorl.thumbnail.fields.ImageField(upload_to=b'media/manufacturers', null=True, verbose_name='picture', blank=True)),
                ('warranty', models.TextField(null=True, verbose_name='warranty', blank=True)),
            ],
            options={
                'ordering': ['name'],
                'verbose_name': 'tire manufacturer',
                'verbose_name_plural': 'tire manufacturers',
            },
        ),
        migrations.CreateModel(
            name='TireManufacturerDiscount',
            fields=[
                ('id', models.AutoField(verbose_name='ID', serialize=False, auto_created=True, primary_key=True)),
                ('discount', models.IntegerField(default=13, verbose_name='discount')),
                ('is_visible', models.BooleanField(default=True, verbose_name='Is this brand visible to dealer?')),
            ],
            options={
                'verbose_name': 'tire manufacturer discount',
                'verbose_name_plural': 'tire manufacturer discounts',
            },
        ),
        migrations.CreateModel(
            name='TirePicture',
            fields=[
                ('id', models.AutoField(verbose_name='ID', serialize=False, auto_created=True, primary_key=True)),
                ('picture', sorl.thumbnail.fields.ImageField(upload_to=b'media/tires', null=True, verbose_name='picture', blank=True)),
                ('caption', models.CharField(max_length=255, null=True, verbose_name='optional caption', blank=True)),
            ],
            options={
                'verbose_name': 'tire picture',
                'verbose_name_plural': 'tire pictures',
            },
        ),
        migrations.CreateModel(
            name='TirePictureThumbnail',
            fields=[
                ('id', models.AutoField(verbose_name='ID', serialize=False, auto_created=True, primary_key=True)),
                ('size', models.CharField(max_length=50)),
                ('path', models.CharField(max_length=1000)),
            ],
        ),
        migrations.CreateModel(
            name='TireReview',
            fields=[
                ('id', models.AutoField(verbose_name='ID', serialize=False, auto_created=True, primary_key=True)),
                ('title', models.CharField(help_text='e.g, A great product.', max_length=255, verbose_name='title of your review')),
                ('name', models.CharField(max_length=255, verbose_name='your name', blank=True)),
                ('rating', models.PositiveIntegerField(verbose_name='rating', choices=[(1, b'Sucks'), (2, b'Meh'), (3, b'OK-ish blah blah blah'), (4, b'Good'), (5, b'Dope')])),
                ('buy_again', models.IntegerField(verbose_name='would buy again?', choices=[(0, b'Definitely'), (1, b'May Be'), (2, b'Not Likely'), (3, b'Not a Chance')])),
                ('recommend', models.IntegerField(verbose_name='would recommend?', choices=[(0, b'Definitely'), (1, b'May Be'), (2, b'Not Likely'), (3, b'Not a Chance')])),
                ('pros', models.TextField(help_text='What do you think is good about this produt.', verbose_name='pros')),
                ('cons', models.TextField(help_text='What do you think is not-so-good about this product.', verbose_name='cons')),
                ('bottom_line', models.TextField(help_text='All things considered, how would you conclude.', null=True, verbose_name='bottom line', blank=True)),
                ('ip', models.GenericIPAddressField(null=True, verbose_name='IP address', blank=True)),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='created at')),
                ('is_approved', models.BooleanField(default=False)),
                ('upvotes', models.IntegerField(default=0, null=True, verbose_name='up votes', blank=True)),
                ('downvotes', models.IntegerField(default=0, null=True, verbose_name='down votes', blank=True)),
                ('make', models.CharField(max_length=255, verbose_name='make')),
                ('year', models.CharField(max_length=255, verbose_name='year')),
                ('model', models.CharField(max_length=255, verbose_name='model')),
                ('mileage', models.IntegerField(help_text='Distance travelled on tires', null=True, verbose_name='mileage', blank=True)),
                ('dry_rating', models.PositiveIntegerField(help_text='Dry Traction when accelerating, braking, cornering.', verbose_name='Dry/Hot weather')),
                ('noise_rating', models.PositiveIntegerField(help_text='Noise/Tone of tire, 1 for loud/aggressive tires.', verbose_name='Noise from tire')),
                ('offroad_rating', models.PositiveIntegerField(help_text='Traction in Offroad conditions, rocky, muddy, etc.', verbose_name='Offroad')),
                ('wet_rating', models.PositiveIntegerField(help_text='Wet traction when accelerating, braking and cornering.', verbose_name='Rain/Wet conditions')),
                ('comfort_rating', models.PositiveIntegerField(help_text='Ride comfort - as the feel of the tires.', verbose_name='Ride comfort')),
                ('snow_rating', models.PositiveIntegerField(help_text='Traction when accelerating, braking and cornering                                              in shallow (up to about 4 inches), powder snow.', verbose_name='Snow/Ice')),
                ('treadwear_rating', models.PositiveIntegerField(help_text='Expectation of wear on the tires.', verbose_name='Treadwear/Age')),
                ('conditions', models.IntegerField(verbose_name='driving conditions', choices=[(0, b'Offroad/Mud'), (1, b'Mostly Highway'), (2, b'Mostly City'), (3, b'Mixed City/Highway'), (4, b'Racing/Track'), (5, b'Only Winter'), (6, b'Load/Trailer Hauler')])),
            ],
            options={
                'ordering': ('-created_at',),
            },
        ),
        migrations.CreateModel(
            name='TireSize',
            fields=[
                ('id', models.AutoField(verbose_name='ID', serialize=False, auto_created=True, primary_key=True)),
                ('sku', models.CharField(max_length=255, unique=True, null=True, verbose_name='SKU', blank=True)),
                ('name', models.CharField(max_length=255, verbose_name='name')),
                ('slug', models.SlugField(help_text='Leave blank to auto-generate', max_length=255, verbose_name='slug', blank=True)),
                ('short_desc', models.CharField(max_length=255, null=True, verbose_name='short description', blank=True)),
                ('long_desc', models.TextField(null=True, verbose_name='long description', blank=True)),
                ('quantity', models.IntegerField(default=1, help_text='in stock', verbose_name='quantity')),
                ('cost', models.DecimalField(null=True, verbose_name='cost', max_digits=16, decimal_places=4, blank=True)),
                ('price', models.DecimalField(verbose_name='price', max_digits=16, decimal_places=4)),
                ('special_price', models.DecimalField(null=True, verbose_name='special price', max_digits=16, decimal_places=4, blank=True)),
                ('spvf', models.DateTimeField(null=True, verbose_name='special price valid from', blank=True)),
                ('spvt', models.DateTimeField(null=True, verbose_name='special price valid till', blank=True)),
                ('meta_title', models.CharField(max_length=255, null=True, verbose_name='meta title', blank=True)),
                ('meta_keywords', models.CharField(max_length=255, null=True, verbose_name='meta keywords', blank=True)),
                ('meta_description', models.CharField(max_length=500, null=True, verbose_name='meta description', blank=True)),
                ('is_active', models.BooleanField(default=True, verbose_name='is active?')),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='created at')),
                ('updated_at', models.DateTimeField(auto_now=True, verbose_name='updated at')),
                ('weight', models.DecimalField(null=True, verbose_name='weight', max_digits=8, decimal_places=2, blank=True)),
                ('weight_unit', models.CharField(default=b'kg', max_length=b'50', verbose_name='weight unit')),
                ('length', models.DecimalField(null=True, verbose_name='length', max_digits=8, decimal_places=2, blank=True)),
                ('length_unit', models.CharField(default=b'm', max_length=b'50', verbose_name='length unit')),
                ('width', models.DecimalField(null=True, verbose_name='width', max_digits=8, decimal_places=2, blank=True)),
                ('width_unit', models.CharField(default=b'm', max_length=b'50', verbose_name='width unit')),
                ('height', models.DecimalField(null=True, verbose_name='height', max_digits=8, decimal_places=2, blank=True)),
                ('height_unit', models.CharField(default=b'm', max_length=b'50', verbose_name='height unit')),
                ('part_no', models.CharField(max_length=100, null=True, verbose_name='part #', blank=True)),
                ('prefix', models.CharField(max_length=5, null=True, verbose_name='prefix', choices=[(b'P', b'P'), (b'LT', b'LT')])),
                ('treadwidth', models.CharField(default=b'', max_length=6, null=True, verbose_name='treadwidth', blank=True)),
                ('profile', models.CharField(default=b'', max_length=6, null=True, verbose_name='profile', blank=True)),
                ('additional_size', models.CharField(default=b'', max_length=5, null=True, verbose_name='additional size', blank=True)),
                ('diameter', models.DecimalField(decimal_places=2, default=b'', max_digits=6, blank=True, null=True, verbose_name='diameter')),
                ('ply', models.CharField(default=b'', max_length=b'5', verbose_name='ply', blank=True, choices=[(b'', b'---'), (b'6C', b'6C'), (b'8D', b'8D'), (b'10E', b'10E')])),
                ('utgq_rating', models.CharField(default=b'', max_length=50, verbose_name='UTGQ rating', blank=True)),
                ('speed_rating', models.CharField(blank=True, max_length=2, verbose_name='speed rating', choices=[(b'H', b'H'), (b'P', b'P'), (b'Q', b'Q'), (b'R', b'R'), (b'S', b'S'), (b'T', b'T'), (b'V', b'V'), (b'W', b'W'), (b'Y', b'Y'), (b'Z', b'Z')])),
                ('load_rating', models.CharField(max_length=10, null=True, verbose_name='load rating', blank=True)),
                ('sidewall_style', models.CharField(default=b'BW', max_length=100, null=True, verbose_name='sidewall style', blank=True)),
                ('availability', models.IntegerField(blank=True, null=True, verbose_name='availability', choices=[(0, b'Manufacturer Direct'), (1, b'Ships in 1-2 Weeks'), (2, b'ETA 2-4 Weeks'), (3, b'Custom Build'), (4, b'Specialty Order'), (5, b'Call for Availability')])),
            ],
            options={
                'ordering': ('diameter',),
                'verbose_name': 'tire size',
                'verbose_name_plural': 'tire sizes',
            },
        ),
        migrations.CreateModel(
            name='Wheel',
            fields=[
                ('id', models.AutoField(verbose_name='ID', serialize=False, auto_created=True, primary_key=True)),
                ('meta_title', models.CharField(max_length=255, null=True, verbose_name='meta title', blank=True)),
                ('meta_keywords', models.CharField(max_length=255, null=True, verbose_name='meta keywords', blank=True)),
                ('meta_description', models.CharField(max_length=500, null=True, verbose_name='meta description', blank=True)),
                ('ordering', models.IntegerField(null=True, verbose_name='sort order', blank=True)),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='created at', null=True)),
                ('updated_at', models.DateTimeField(auto_now=True, verbose_name='updated at', null=True)),
                ('is_active', models.BooleanField(default=1, verbose_name='is active?')),
                ('name', models.CharField(max_length=200, verbose_name='name')),
                ('slug', models.SlugField(max_length=255, verbose_name='slug', blank=True)),
                ('description', models.TextField(null=True, verbose_name='description', blank=True)),
            ],
            options={
                'ordering': ['name'],
                'verbose_name': 'wheel',
                'verbose_name_plural': 'wheels',
            },
        ),
        migrations.CreateModel(
            name='WheelBrandImagesThumbnail',
            fields=[
                ('id', models.AutoField(verbose_name='ID', serialize=False, auto_created=True, primary_key=True)),
                ('brand_name', models.CharField(max_length=155)),
                ('size', models.CharField(max_length=50)),
                ('path', models.CharField(max_length=1000)),
            ],
        ),
        migrations.CreateModel(
            name='WheelCoupon',
            fields=[
                ('id', models.AutoField(verbose_name='ID', serialize=False, auto_created=True, primary_key=True)),
                ('picture', sorl.thumbnail.fields.ImageField(upload_to=b'media/coupons', verbose_name='picture')),
                ('detail', models.TextField(null=True, verbose_name='coupon details', blank=True)),
                ('is_active', models.BooleanField()),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='created at')),
                ('updated_at', models.DateTimeField(auto_now=True, verbose_name='updated at')),
            ],
        ),
        migrations.CreateModel(
            name='WheelCustomerMedia',
            fields=[
                ('id', models.AutoField(verbose_name='ID', serialize=False, auto_created=True, primary_key=True)),
                ('title', models.CharField(max_length=100, verbose_name='title')),
                ('make', models.CharField(max_length=255, verbose_name='make')),
                ('year', models.CharField(max_length=255, verbose_name='year')),
                ('model', models.CharField(max_length=255, verbose_name='model')),
                ('picture', sorl.thumbnail.fields.ImageField(help_text=b'Max size is 250 KiB', upload_to=b'media/customer', null=True, verbose_name='picture', blank=True)),
                ('video', models.URLField(help_text=b'YouTube Video URL', max_length=255, null=True, verbose_name='video', blank=True)),
                ('comment', models.TextField(max_length=500, null=True, verbose_name='comments', blank=True)),
                ('is_active', models.BooleanField(default=False)),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='created at')),
                ('updated_at', models.DateTimeField(auto_now=True, verbose_name='updated at')),
            ],
        ),
        migrations.CreateModel(
            name='WheelManufacturer',
            fields=[
                ('id', models.AutoField(verbose_name='ID', serialize=False, auto_created=True, primary_key=True)),
                ('meta_title', models.CharField(max_length=255, null=True, verbose_name='meta title', blank=True)),
                ('meta_keywords', models.CharField(max_length=255, null=True, verbose_name='meta keywords', blank=True)),
                ('meta_description', models.CharField(max_length=500, null=True, verbose_name='meta description', blank=True)),
                ('ordering', models.IntegerField(null=True, verbose_name='sort order', blank=True)),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='created at', null=True)),
                ('updated_at', models.DateTimeField(auto_now=True, verbose_name='updated at', null=True)),
                ('is_active', models.BooleanField(default=1, verbose_name='is active?')),
                ('name', models.CharField(max_length=200, verbose_name='name')),
                ('slug', models.SlugField(max_length=255, verbose_name='slug', blank=True)),
                ('description', models.TextField(verbose_name='description', blank=True)),
                ('is_configurator', models.BooleanField(default=False, verbose_name='is configurator available')),
                ('picture', sorl.thumbnail.fields.ImageField(upload_to=b'media/manufacturers', null=True, verbose_name='picture', blank=True)),
                ('warranty', models.TextField(null=True, verbose_name='warranty', blank=True)),
            ],
            options={
                'ordering': ('name',),
                'verbose_name': 'wheel manufacturer',
                'verbose_name_plural': 'wheel manufacturers',
            },
        ),
        migrations.CreateModel(
            name='WheelManufacturerDiscount',
            fields=[
                ('id', models.AutoField(verbose_name='ID', serialize=False, auto_created=True, primary_key=True)),
                ('discount', models.IntegerField(default=13, verbose_name='discount')),
                ('is_visible', models.BooleanField(default=True, verbose_name='Is this brand visible to dealer?')),
            ],
            options={
                'verbose_name': 'wheel manufacturer discount',
                'verbose_name_plural': 'wheel manufacturer discounts',
            },
        ),
        migrations.CreateModel(
            name='WheelPicture',
            fields=[
                ('id', models.AutoField(verbose_name='ID', serialize=False, auto_created=True, primary_key=True)),
                ('picture', sorl.thumbnail.fields.ImageField(upload_to=b'media/wheels', null=True, verbose_name='picture', blank=True)),
                ('caption', models.CharField(max_length=255, null=True, verbose_name='optional caption', blank=True)),
            ],
            options={
                'verbose_name': 'wheel picture',
                'verbose_name_plural': 'wheel pictures',
            },
        ),
        migrations.CreateModel(
            name='WheelPictureThumbnail',
            fields=[
                ('id', models.AutoField(verbose_name='ID', serialize=False, auto_created=True, primary_key=True)),
                ('size', models.CharField(max_length=50)),
                ('path', models.CharField(max_length=1000)),
            ],
        ),
        migrations.CreateModel(
            name='WheelReview',
            fields=[
                ('id', models.AutoField(verbose_name='ID', serialize=False, auto_created=True, primary_key=True)),
                ('title', models.CharField(help_text='e.g, A great product.', max_length=255, verbose_name='title of your review')),
                ('name', models.CharField(max_length=255, verbose_name='your name', blank=True)),
                ('rating', models.PositiveIntegerField(verbose_name='rating', choices=[(1, b'Sucks'), (2, b'Meh'), (3, b'OK-ish blah blah blah'), (4, b'Good'), (5, b'Dope')])),
                ('buy_again', models.IntegerField(verbose_name='would buy again?', choices=[(0, b'Definitely'), (1, b'May Be'), (2, b'Not Likely'), (3, b'Not a Chance')])),
                ('recommend', models.IntegerField(verbose_name='would recommend?', choices=[(0, b'Definitely'), (1, b'May Be'), (2, b'Not Likely'), (3, b'Not a Chance')])),
                ('pros', models.TextField(help_text='What do you think is good about this produt.', verbose_name='pros')),
                ('cons', models.TextField(help_text='What do you think is not-so-good about this product.', verbose_name='cons')),
                ('bottom_line', models.TextField(help_text='All things considered, how would you conclude.', null=True, verbose_name='bottom line', blank=True)),
                ('ip', models.GenericIPAddressField(null=True, verbose_name='IP address', blank=True)),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='created at')),
                ('is_approved', models.BooleanField(default=False)),
                ('upvotes', models.IntegerField(default=0, null=True, verbose_name='up votes', blank=True)),
                ('downvotes', models.IntegerField(default=0, null=True, verbose_name='down votes', blank=True)),
                ('make', models.CharField(max_length=255, verbose_name='make')),
                ('year', models.CharField(max_length=255, verbose_name='year')),
                ('model', models.CharField(max_length=255, verbose_name='model')),
                ('mileage', models.IntegerField(help_text='Distance travelled on wheels', null=True, verbose_name='mileage', blank=True)),
            ],
            options={
                'ordering': ('-created_at',),
            },
        ),
        migrations.CreateModel(
            name='WheelScrappedPictures',
            fields=[
                ('id', models.AutoField(verbose_name='ID', serialize=False, auto_created=True, primary_key=True)),
                ('part_no', models.CharField(max_length=255, verbose_name='part_no')),
                ('pic_url', models.CharField(max_length=255, verbose_name='pic_url')),
            ],
        ),
        migrations.CreateModel(
            name='WheelSize',
            fields=[
                ('id', models.AutoField(verbose_name='ID', serialize=False, auto_created=True, primary_key=True)),
                ('sku', models.CharField(max_length=255, unique=True, null=True, verbose_name='SKU', blank=True)),
                ('name', models.CharField(max_length=255, verbose_name='name')),
                ('slug', models.SlugField(help_text='Leave blank to auto-generate', max_length=255, verbose_name='slug', blank=True)),
                ('short_desc', models.CharField(max_length=255, null=True, verbose_name='short description', blank=True)),
                ('long_desc', models.TextField(null=True, verbose_name='long description', blank=True)),
                ('quantity', models.IntegerField(default=1, help_text='in stock', verbose_name='quantity')),
                ('cost', models.DecimalField(null=True, verbose_name='cost', max_digits=16, decimal_places=4, blank=True)),
                ('price', models.DecimalField(verbose_name='price', max_digits=16, decimal_places=4)),
                ('special_price', models.DecimalField(null=True, verbose_name='special price', max_digits=16, decimal_places=4, blank=True)),
                ('spvf', models.DateTimeField(null=True, verbose_name='special price valid from', blank=True)),
                ('spvt', models.DateTimeField(null=True, verbose_name='special price valid till', blank=True)),
                ('meta_title', models.CharField(max_length=255, null=True, verbose_name='meta title', blank=True)),
                ('meta_keywords', models.CharField(max_length=255, null=True, verbose_name='meta keywords', blank=True)),
                ('meta_description', models.CharField(max_length=500, null=True, verbose_name='meta description', blank=True)),
                ('is_active', models.BooleanField(default=True, verbose_name='is active?')),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='created at')),
                ('updated_at', models.DateTimeField(auto_now=True, verbose_name='updated at')),
                ('weight', models.DecimalField(null=True, verbose_name='weight', max_digits=8, decimal_places=2, blank=True)),
                ('weight_unit', models.CharField(default=b'kg', max_length=b'50', verbose_name='weight unit')),
                ('length', models.DecimalField(null=True, verbose_name='length', max_digits=8, decimal_places=2, blank=True)),
                ('length_unit', models.CharField(default=b'm', max_length=b'50', verbose_name='length unit')),
                ('width', models.DecimalField(null=True, verbose_name='width', max_digits=8, decimal_places=2, blank=True)),
                ('width_unit', models.CharField(default=b'm', max_length=b'50', verbose_name='width unit')),
                ('height', models.DecimalField(null=True, verbose_name='height', max_digits=8, decimal_places=2, blank=True)),
                ('height_unit', models.CharField(default=b'm', max_length=b'50', verbose_name='height unit')),
                ('wheelwidth', models.DecimalField(decimal_places=1, max_digits=4, blank=True, null=True, verbose_name='wheel width', db_index=True)),
                ('diameter', models.DecimalField(decimal_places=1, max_digits=4, blank=True, null=True, verbose_name='diameter', db_index=True)),
                ('offset', models.IntegerField(db_index=True, null=True, verbose_name='offset', blank=True)),
                ('finish', models.CharField(db_index=True, max_length=50, null=True, verbose_name='finish', blank=True)),
                ('boltpattern_1', models.CharField(default=0, max_length=20, blank=True, null=True, verbose_name='boltpattern 1', db_index=True)),
                ('boltpattern_2', models.CharField(default=0, max_length=20, blank=True, null=True, verbose_name='boltpattern 2', db_index=True)),
                ('centerbore', models.CharField(max_length=10, null=True, verbose_name='centerbore', blank=True)),
                ('availability', models.IntegerField(blank=True, null=True, verbose_name=b'Availability', db_index=True, choices=[(0, b'Manufacturer Direct'), (1, b'Ships in 1-2 Weeks'), (2, b'ETA 2-4 Weeks'), (3, b'Custom Build'), (4, b'Specialty Order'), (5, b'Call for Availability')])),
            ],
            options={
                'ordering': ('diameter',),
                'verbose_name': 'wheel size',
                'verbose_name_plural': 'wheel sizes',
            },
        ),
        migrations.CreateModel(
            name='WheelSliderImages',
            fields=[
                ('id', models.AutoField(verbose_name='ID', serialize=False, auto_created=True, primary_key=True)),
                ('image', sorl.thumbnail.fields.ImageField(upload_to=b'static/img/slides/', null=True, verbose_name='image', blank=True)),
                ('image_link', models.CharField(max_length=255, null=True, verbose_name='image_link', blank=True)),
                ('part_no', models.CharField(max_length=255, null=True, verbose_name='part_no', blank=True)),
            ],
            options={
                'verbose_name': 'wheel sliderimages',
                'verbose_name_plural': 'wheel sliderimagess',
            },
        ),
        migrations.CreateModel(
            name='WheelSliderImagesThumbnail',
            fields=[
                ('id', models.AutoField(verbose_name='ID', serialize=False, auto_created=True, primary_key=True)),
                ('size', models.CharField(max_length=50)),
                ('path', models.CharField(max_length=1000)),
                ('WheelSliderImages', models.ForeignKey(related_name='thumbnails', to='kx.WheelSliderImages')),
            ],
        ),
    ]
